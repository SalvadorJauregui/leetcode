https://leetcode.com/contest/weekly-contest-105/problems/reverse-only-letters/

Given a string S, return the "reversed" string where all characters that are 
not a letter stay in the same place, and all letters reverse their positions.
 
Example 1:

Input: "ab-cd"
Output: "dc-ba"
Example 2:

Input: "a-bC-dEf-ghIj"
Output: "j-Ih-gfE-dCba"
Example 3:

Input: "Test1ng-Leet=code-Q!"
Output: "Qedo1ct-eeLg=ntse-T!"
 

Note:

S.length <= 100
33 <= S[i].ASCIIcode <= 122 
S doesn't contain \ or "

class Solution {
    public String reverseOnlyLetters(String S) {
        StringBuilder sb = new StringBuilder(S);
        char tmp;
        for (int i = 0, j = sb.length() -1 ; i < j ; i++, --j){
            while(i < j && (Character.isLetter(sb.charAt(i)) == false))
                ++i;
            while(i < j && (Character.isLetter(sb.charAt(j))==false))
                --j;
            tmp = sb.charAt(i);
            sb.setCharAt(i, sb.charAt(j));
            sb.setCharAt(j, tmp);
        }
        return sb.toString();
    }
}

https://leetcode.com/problems/jewels-and-stones/submissions/

You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.

The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so "a" is considered a different type of stone from "A".

Example 1:

Input: J = "aA", S = "aAAbbbb"
Output: 3
Example 2:

Input: J = "z", S = "ZZ"
Output: 0
Note:

S and J will consist of letters and have length at most 50.
The characters in J are distinct.

class Solution {
    public int numJewelsInStones(String J, String S) {
     		int[] mapLowerCase = new int[26];
		    int[] mapUpperCase = new int[26];
	    	char letter;
    		int count = 0;
    
    		/* Mark letter in J in O(J.length)*/
            for (int i = 0; i < J.length(); i++){
                letter = J.charAt(i);
                if (Character.isLowerCase(letter) == true) {
                    if (mapLowerCase[letter - 'a'] == 0)
                        mapLowerCase[letter - 'a']++;
                }else {
                    if (mapUpperCase[letter -'A'] == 0)
                        mapUpperCase[letter -'A']++;
                }								
            }
		
            /* Check for the jewels in S in O(S.length) */
            for (int i = 0; i < S.length(); i++) {
                letter = S.charAt(i);

                /* It is a Jewel?*/
                if (Character.isLowerCase(letter) == true) {
                    if (mapLowerCase[letter - 'a'] > 0)
                        mapLowerCase[letter -'a']++;
                }else {
                    if (mapUpperCase[letter -'A'] > 0)
                        mapUpperCase[letter -'A']++;
                }

            }

            /* Sum in O(26 x 2)*/
            for (int i : mapLowerCase) {
                if (i > 0) {
                    count += i;
                    count--;
                }
            }

            for (int i : mapUpperCase) {
                if (i > 0) {
                    count += i;
                    --count;
                }
            }
		
            return count;
        }
}
